<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
	http://www.springframework.org/schema/data/jpa   http://www.springframework.org/schema/data/jpa/spring-jpa.xsd 
	http://www.springframework.org/schema/context     http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop         http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/task        http://www.springframework.org/schema/task/spring-task-3.1.xsd
	http://www.springframework.org/schema/jdbc        http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<context:property-placeholder location="classpath*:META-INF/*.properties" />
  
<!--   <mvc:resources mapping="/ads/files/**" location="${pathdirectoryall}" /> -->
<mvc:resources mapping="/files/**" location="${pathdirectoryall}"/>
    
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources location="/, classpath:/META-INF/web-resources/"
		mapping="/resources/**" />
   <beans:bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
    </beans:bean>
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>

		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<property name="prefixJson" value="false" />
					<property name="objectMapper" ref="jacksonObjectMapper" />
				</bean>
			</list>
		</property>
	</bean>
	<bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="prefixJson" value="false" />
					<property name="supportedMediaTypes" value="application/json" />
				</bean>
			</list>
		</property>
	</bean>
	<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
            <property name="supportedMediaTypes">
                <list>
                    <value>image/jpeg</value>
                    <value>image/png</value>
                </list>
            </property>
        </bean>
	<context:component-scan base-package="hu.co.horizont" />

	<bean class="java.net.URI" id="dbUrl">
		<constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url" value="#{ 'jdbc:mysql://' + @dbUrl.getHost() + @dbUrl.getPath() }"/>
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
	</bean>

	<!--<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"-->
		<!--destroy-method="close">-->
		<!--<property name="driverClassName" value="${database.driverClassName}" />-->
		<!--<property name="url" value="${database.url}" />-->
		<!--<property name="username" value="${database.username}" />-->
		<!--<property name="password" value="${database.password}" />-->
		<!--<property name="validationQuery" value="SELECT 1" />-->
		<!--<property name="testOnBorrow" value="true" />-->
	<!--</bean>-->

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="vendorProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="SQL Server">sqlserver</prop>
				<prop key="DB2">db2</prop>
				<prop key="Oracle">oracle</prop>
				<prop key="MySQL">mysql</prop>
			</props>
		</property>
	</bean>

	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		<property name="properties" ref="vendorProperties" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:hu/co/horizont/dao/**/*.xml" />
		<property name="databaseIdProvider" ref="databaseIdProvider" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/> -->
		<property name="sqlSessionTemplateBeanName" value="sqlSession" />
		<property name="basePackage" value="hu.co.horizont.mapper" />
	</bean>

	<!-- =================== Service beans configuration ================== -->

	
	<bean id="adService" class="hu.co.horizont.service.AdService"></bean>

	<!-- =============== MyBATIS beans configuration ================== -->
	<bean id="adMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="hu.co.horizont.mapper.AdMapper" />
	</bean>
	
	<bean id="categoryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="hu.co.horizont.mapper.CategoryMapper" />
	</bean>
	
	<bean id="imageMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="hu.co.horizont.mapper.ImageMapper" />
	</bean>
	
	<bean id="locationMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="hu.co.horizont.mapper.LocationMapper" />
	</bean>
	
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="hu.co.horizont.mapper.UserMapper" />
	</bean>

	<!-- liquibase config -->
	<!--<bean id="LiquibaseUpdater" class="liquibase.integration.spring.SpringLiquibase">-->
		<!--<property name="dataSource" ref="dataSource" />-->
		<!--<property name="changeLog" value="classpath:changelog.xml" />-->
	<!--</bean>-->

	<bean class="hu.co.horizont.exceptions.HorizontExceptionHandler" ></bean>
</beans:beans>
